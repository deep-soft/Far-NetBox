#2024-02-23 13:40
name: act-Release

on:
  workflow_dispatch:
#  push:
#    branches:
#      - master

env:
  PROG_NAME: 'Far-NetBox'
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build: [
#                 nmake_cl_x64_release,
#                 nmake_cl_x86_release,
#                 nmake_cl_ARM64_release,
                 ninja_cl_x64_release,
                 ninja_cl_x86_release,
                 ninja_cl_ARM64_release,
               ]

        include:
#          - { build: nmake_cl_x64_release,    arch: amd64,       platform: x64,   }
#          - { build: nmake_cl_x86_release,    arch: amd64_x86,   platform: x86,   }
#          - { build: nmake_cl_ARM64_release,  arch: amd64_arm64, platform: ARM64, }
          - { build: ninja_cl_x64_release,    arch: amd64,       platform: x64,   }
          - { build: ninja_cl_x86_release,    arch: amd64_x86,   platform: x86,   }
          - { build: ninja_cl_ARM64_release,  arch: amd64_arm64, platform: ARM64, }

    runs-on: windows-2019
    steps:
      - name: Checkout source
        uses: deep-soft/checkout@v4

      - name: Get version
        shell: bash
        run: |
          export VERSION_MAJOR=$(grep "NETBOX_VERSION_MAJOR" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_MAJOR\s*\([0-9]\+\)/\1/g")
          export VERSION_MINOR=$(grep "NETBOX_VERSION_MINOR" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_MINOR\s*\([0-9]\+\)/\1/g")
          export VERSION_PATCH=$(grep "NETBOX_VERSION_PATCH" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_PATCH\s*\([0-9]\+\)/\1/g")
          export VERSION_BUILD=$(grep "NETBOX_VERSION_BUILD" src/NetBox/plugin_version.hpp | sed -e "s/^.* NETBOX_VERSION_BUILD\s*\([0-9]\+\)/\1/g")
          echo "VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH.$VERSION_BUILD" >> $GITHUB_ENV
          #echo "VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH.$VERSION_BUILD.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Set the pack file name
        shell: bash
        run: |
          echo "netbox_name=${{ env.PROG_NAME }}.${{ matrix.platform }}.${{ env.VERSION }}.7z" >> $GITHUB_ENV
          echo "netbox_pdb_name=${{ env.PROG_NAME }}.${{ matrix.platform }}.${{ env.VERSION }}.pdb.7z" >> $GITHUB_ENV

      - name: Add C++ build tools to PATH
        #uses: deep-soft/msvc-dev-cmd@v1.12.1
        uses: deep-soft/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Setup cache
        uses: deep-soft/cache@v4
        with:
          path: ${{ github.workspace }}
          key: cache-${{ matrix.arch }}
          restore-keys: |
            cache-${{ matrix.arch }}

      - name: Cleanup
        continue-on-error: true
        shell: bash
        run: |
          rm ./*.7z || true;

      - name: Create Build folder
        run: |
          cmake -E make_directory build

      - name: Configure CMake
        shell: bash
        working-directory: build
        #cmake -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DPROJECT_PLATFORM=${{ matrix.platform }} $GITHUB_WORKSPACE/src/NetBox
        run: |
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DPROJECT_PLATFORM=${{ matrix.platform }} -DOPT_CREATE_PLUGIN_DIR=ON $GITHUB_WORKSPACE

      - name: Build
        working-directory: build
        shell: bash
        # cmake --build . --config ${{ env.BUILD_TYPE }}
        # cmake --build . --config ${{ env.BUILD_TYPE }} --target all
        run: |
          cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: pack plugin
        shell: bash
        run: |
          cp LICENSE.txt README.md ./Far3_${{ matrix.platform }}/Plugins/NetBox/
          7z a -m0=LZMA -mf=BCJ2 -mx9 ${{ env.netbox_name }} ./Far3_${{ matrix.platform }}/Plugins/NetBox/* -xr!*.pdb \
            -xr!NetBox.map -xr!NetBoxPol.lng -xr!NetBoxRus.lng -xr!NetBoxSpa.lng -xr!README.PL.md -xr!README.RU.md
          if [[ -f ./Far3_${{ matrix.platform }}/Plugins/NetBox/NetBox.pdb ]] ; then
            7z a -m0=LZMA -mf=off -mx9 ${{ env.netbox_pdb_name }} ./Far3_${{ matrix.platform }}/Plugins/NetBox/NetBox.pdb
          fi
          
      - name: Publish Release
        continue-on-error: true
        uses: deep-soft/action-gh-release@v2.1
        with:
          draft: false
          name: "${{ env.PROG_NAME }} v${{ env.version }}"
          tag_name: "v${{ env.version }}"
          body: "Far ${{ env.PROG_NAME }}: v${{ env.version }}"
          files: |
            ${{ env.PROG_NAME }}.${{ matrix.platform }}*.7z

      - name: Prepare latest Release
        continue-on-error: false
        shell: bash
        run: |
          echo "${{ env.VERSION }}" > ${{ env.PROG_NAME }}-latest.txt
          rm *pdb.7z || true;
          mv ${{ env.PROG_NAME }}.${{ matrix.platform }}*.7z ${{ env.PROG_NAME }}.${{ matrix.platform }}.7z || true;
          #mv ${{ env.PROG_NAME }}.x64*.7z ${{ env.PROG_NAME }}.x64.7z || true;
          #mv ${{ env.PROG_NAME }}.x86*.7z ${{ env.PROG_NAME }}.x86.7z || true;
          #mv ${{ env.PROG_NAME }}.ARM64*.7z ${{ env.PROG_NAME }}.ARM64.7z || true;

      - name: Publish latest Release
        continue-on-error: false
        uses: deep-soft/action-gh-release@v2.1
        with:
          draft: false
          name: "${{ env.PROG_NAME }}-latest"
          tag_name: "${{ env.PROG_NAME }}-latest"
          body: "${{ env.PROG_NAME }} latest: v${{ env.version }}"
          files: |
            ${{ env.PROG_NAME }}.${{ matrix.platform }}.7z
            ${{ env.PROG_NAME }}-latest.txt

      - name: Cleanup
        continue-on-error: true
        shell: bash
        run: |
          rm ./*.7z || true;
          rm ./*.zip || true;
